"use strict";(self["webpackChunkpantosrms"]=self["webpackChunkpantosrms"]||[]).push([[504],{82504:function(e,t,a){a.r(t),a.d(t,{default:function(){return l}});var r=function(){var e=this,t=e._self._c;return t("view-main",e._g({ref:"form",attrs:{data:e.$data}},e.listeners))},i=[],o=a(89449).Z,n={name:"View-Sample",mixins:[o]},c=n,s=a(1001),u=(0,s.Z)(c,r,i,!1,null,null,null),l=u.exports},89449:function(e,t,a){a(70560);var r=a(20629);const i={metaInfo(){return{title:`PantosAPI - ${window.getApp.$util.isNullTo(window.getApp.$route.meta.title,window.getApp.$route.name)}`,description:`${window.getApp.$util.isNullTo(window.getApp.$route.meta.description,"Sample")}`}},data(){return{rules:{required:e=>!!e||"Required!"},valid:!1,carriers:["cmacgm","msc","one"],currLang:this.$i18n.locale,defs:[],items:[],gridData:[],condition:{carriers:["one"],pol:"krpus",pod:"",date:"",container:{isDry:!0,size:"20DR",qty:1,wgt:1800,wgtType:"Kg"}},equiType:"Dry",dialog:!1,routeDetail:{carrier:null,Summary:{qty:1,charge:0}},tab:null,cmacgmAdd:{dnd:{ExportDetentionDemurrageDetails:[],ImportDetentionDemurrageDetails:[]},cancelFee:[]},accessToken:{},isLoading:!1,clientId:"",updates:[],eventSource:null}},watch:{"$i18n.locale"(){this.currLang=this.$i18n.locale},"condition.container.isDry"(e){this.equiType=e?"Dry":"Reefer"},"condition.pol"(e){window.getApp.$emit("APP_SET_COOKIE",{name:"pol",value:e})},"condition.pod"(e){window.getApp.$emit("APP_SET_COOKIE",{name:"pod",value:e})}},computed:{...(0,r.rn)(["page"]),listeners(){return{seeMore:this.seeMore,search:this.search,callEvent:this.callEvent,closeDialog:this.closeDialog}},gridDefs(){return[{headerName:this.$t("common.carrier"),type:"text",field:"carrier"},{headerName:this.$t("sample.transitDays"),type:"number",field:"transitDays"},{headerName:this.$t("sample.transMode"),type:"text",field:"transhipmentMode"},{headerName:this.$t("sample.bookingAvailable"),type:"text",field:"bookingAvailable"},{headerName:this.$t("sample.totalCharge"),type:"number",cellStyle:{"font-weight":"bold","font-color":"red"},field:"totalCharge"},{headerName:this.$t("sample.currency"),type:"text",field:"currency"},{headerName:this.$t("sample.quoteExp"),type:"date",field:"quoteExpiration"},{headerName:this.$t("sample.vessleName"),type:"text",field:"vesselName"},{headerName:this.$t("sample.departureDate"),type:"date",field:"departureDate"},{headerName:this.$t("sample.arrivalDate"),type:"date",field:"arrivalDate"},{headerName:this.$t("sample.sizeType"),type:"text",field:"contanierSizeType"},{headerName:this.$t("sample.quantity"),type:"number",field:"containerQuantity"}]}},created(){this.connectSSE();const e=this.$util.getCookie("pol");e&&(this.condition.pol=e);const t=this.$util.getCookie("pod");t&&(this.condition.pod=t)},mounted(){this.defs=this.gridDefs,this.condition.date=this.$moment().format("YYYY-MM-DD")},beforeDestroy(){this.eventSource&&this.eventSource.close()},methods:{connectSSE(){const e="https://spotapi.mylxpantos.com",t=`${e}/events`;return new Promise(((e,a)=>{this.eventSource=new EventSource(t),this.eventSource.onopen=()=>{console.log("SSE 연결 성공")},this.eventSource.addEventListener("clientId",(t=>{const a=JSON.parse(t.data);this.clientId=a.clientId,console.log(`Received clientId: ${this.clientId}`),e(!0)})),this.eventSource.onmessage=e=>{const t=JSON.parse(e.data);this.updates.forEach((e=>{e.carrier===t.carrier&&(e.code=t.code,e.msgCode=`sample.${t.code}`,e.message=t.message)}))},this.eventSource.onerror=e=>{console.error("SSE 연결 에러:",e),this.eventSource.close(),this.clientId="",a(e)}}))},callEvent:function(e,t){this.$util.getIsValid(this,e)&&"function"===typeof this[e]&&this[e](t)},seeMore(e){let t=this.getRouteItem(e.data);this.routeDetail={...t,carrier:e.data.carrier},this.dialog=!0},closeDialog(){this.dialog=!1},async search(){try{if(this.valid=this.$refs.form.$refs.flex[0].getRef("form").validate(),this.items=[],this.gridData=[],this.updates=[],!this.valid)throw new Error("필수 입력 값이 입력되었는지 확인해주세요.");this.isLoading=!0,this.eventSource&&this.eventSource.readyState!==EventSource.CLOSED||await this.connectSSE();let e={headers:{"Content-Type":"application/json","Client-Id":this.clientId}};this.accessToken.one||(this.accessToken.one=this.$util.getCookie("oneAccessToken")),this.accessToken.cmacgm||(this.accessToken.cmacgm=this.$util.getCookie("cmacgmAccessToken"));let t=this.condition.carriers.map((t=>{console.log("clientId=>",this.clientId),this.updates.push({carrier:t,loading:!0,msgCode:"sample.start",code:"start",message:"starting process"});const a={carriers:[t],pol:this.condition.pol,pod:this.condition.pod,date:this.condition.date,container:{...this.condition.container},accessToken:this.accessToken};return this.$api().post("inquireSpotPrice",a,e).then((e=>{this._.get(e,"data",[]).map((e=>{this.updates.forEach((e=>{e.carrier===t&&(e.loading=!1)})),e.ok&&("cmacgm"===t?(this.makeGridDataCmacgm(e),this.accessToken.one=e.token,window.getApp.$emit("APP_SET_COOKIE",{name:"cmacgmAccessToken",value:e.token})):"msc"===t?this.makeGridDataMsc(e):"one"===t&&(this.makeGridDataOne(e),this.accessToken.one=e.token,window.getApp.$emit("APP_SET_COOKIE",{name:"oneAccessToken",value:e.token})),this.items.push(e))}))}))}));await Promise.all(t),this.isLoading=!1}catch(e){this.$util.customLog("99-Error=>",e),window.getApp.$emit("APP_SET_PUSH",e.message,"error"),this.isLoading=!1}},makeGridDataCmacgm(e){const t=e.carrier,a=e.data.quoteLineAndRoutingHeaders;Array.isArray(a)&&a.forEach((e=>{if(Array.isArray(e.ChargeDetails)&&e.ChargeDetails.length>0){let a={carrier:t,transitDays:e.TransitTime,transhipmentMode:0===e.TranShipment.length?"Direct":e.TranShipment,bookingAvailable:e.AllocationResponse.HasAllocation?"Available":"Sold Out",unitTotal:e.ChargeDetails[0].TotalCharge.Amount,total:e.ChargeDetails[0].TotalCharge.Amount+e.BlChargeDetail.TotalCharge.Amount,currency:e.ChargeDetails[0].TotalCharge.Currency.Code,quoteExpiration:this.$util.formatDate(new Date((new Date).setDate((new Date).getDate()+1))),vesselName:e.VesselName,departureDate:this.$util.extractFormatedDate(e.DepartureDate),arrivalDate:this.$util.extractFormatedDate(e.ArrivalDate),contanierSizeType:e.Equipments[0].Code,containerQuantity:this.condition.container.qty,OfferId:e.OfferId,totalCharge:e.ChargeDetails[0].TotalCharge.Amount*this.condition.container.qty+e.BlChargeDetail.TotalCharge.Amount};this.gridData.push(a)}}))},makeGridDataMsc(e){const t=e.carrier,a=e.data.RateCards;Array.isArray(a)&&a.forEach((e=>{e.ScheduleDetails.forEach((a=>{const r=a.RouteScheduleLegDetails.find((e=>1===e.LegSequence)),i=a.RouteScheduleLegDetails.find((e=>e.LegSequence===1+a.Route));let o={carrier:t,transitDays:e.OceanTransitDays+e.InlandTransitDays,transhipmentMode:e.VesselRouteList,bookingAvailable:e.Visible?"Avaliable":"Sold Out",unitTotal:e.UnitTotal,subTotal:e.SubTotal,total:e.Total,currency:e.Currency,quoteExpiration:e.QuoteExpiration,vesselName:r.VesselName,departureDate:this.$util.extractFormatedDate(r.EstimatedDepartureTime),arrivalDate:this.$util.extractFormatedDate(i.EstimatedArrivalTime),contanierSizeType:e.SizeType,containerQuantity:this.condition.container.qty,OfferId:e.Reference,RouteHeader:a.RouteHeader,totalCharge:Math.round(e.UnitTotal*this.condition.container.qty+e.SubTotal)};this.gridData.push(o)}))}))},makeGridDataOne(e){const t=e.carrier,a=e.data.filter((e=>new Date(e.departureDateEstimated)>=new Date(this.condition.date)));Array.isArray(a)&&a.forEach((e=>{const a=e.freightInfos[0],r=a.departures.find((e=>1===e.sequence));let i={carrier:t,transitDays:a.duration,transhipmentMode:a.routeType,bookingAvailable:a.status,currency:e.currencies[0],quoteExpiration:a.validToDateTime,vesselName:String().concat(r.transportName,"(",r.conveyanceNumber,")"),departureDate:e.departureDateEstimated,arrivalDate:e.arrivalDateEstimated,contanierSizeType:this.condition.container.size,containerQuantity:this.condition.container.qty,OfferId:a.spotRateOfferingId,totalCharge:e.totalPrice+e.totalPricePremium-e.totalPricePromotion-e.totalPriceHotDeal,promotionStatus:e.promotionStatus};this.gridData.push(i)}))},getRouteItem(e){return"msc"===e.carrier?this.makeRouteItemMsc(e):"cmacgm"===e.carrier?this.makeRouteItemCmacgm(e):"one"===e.carrier?this.makeRouteItemOne(e):void 0},makeRouteItemMsc(e){let t=this.items.find((e=>"msc"===e.carrier)).data;const a=t.RateCards.find((t=>t.Reference===e.OfferId)),r=a.ScheduleDetails.find((t=>t.RouteHeader.some((t=>e.RouteHeader.some((e=>e.RouteScheduleId===t.RouteScheduleId)))))),i=r.RouteHeader[0].RouteScheduleLegDetails.find((e=>1===e.LegSequence)),o=r.RouteHeader[0].RouteScheduleLegDetails.reduce(((e,t)=>t.LegSequence>e.LegSequence?t:e),r.RouteHeader[0].RouteScheduleLegDetails[0]),n={origin:{uncode:a.Origin.Port.UnCode,name:a.Origin.Port.Name},destination:{uncode:a.Destination.Port.UnCode,name:a.Destination.Port.Name},cargoWgt:a.Weight,cargoWgtUnit:a.WeightUnit,cargoSzieType:a.SizeType,cargoQty:this.condition.container.qty,serviceName:i.MaritimeServiceName,vessleName:i.VesselName,transhipMode:a.OceanTranshipmentMode,totalTransitDays:a.TotalTransitDays,allInPrice:Math.round(a.UnitTotal*this.condition.container.qty+a.SubTotal),currency:a.Currency,priceDetail:[{priceType:"unitTotal",priceCaption:"per Unit",amount:Math.round(a.UnitTotal)},{priceType:"subTotal",priceCaption:"per BL",amount:Math.round(a.SubTotal)}],priceStatus:a.Visible?"Available":"Sold Out",rateValidity:a.RateValidity,etd:this.$util.extractFormatedDate(i.EstimatedDepartureTime),eta:this.$util.extractFormatedDate(o.EstimatedArrivalTime)},c=a.ChargesGroup.map((e=>{const t=[];let a={category:e.ChargeType,paymentMethod:e.SelectedPaymentMethod};return a.charges=e.Charges.map((e=>{let a=t.find((t=>t.perType===e.ChargeLevel&&t.currency===e.Currency));return a?a.amount+=e.Amount:(a={perType:e.ChargeLevel,amount:e.Amount,currency:e.Currency},t.push(a)),{chargeCode:e.Code,chargeName:e.ChargeDescription,perType:e.ChargeLevel,amount:e.Amount,currency:e.Currency,comments:e.CommentsAndConditions}})),a.summary=t,a}));var s={transitDays:r.TransitDays,numberOfTransits:a.OceanTranshipmentMode,routings:r.RouteScheduleLegDetails.map((e=>({vesselName:e.VesselName,serviceName:e.MaritimeServiceName,voyageNo:e.DepartureVoyageNo,leqSeq:e.LegSequence,departureLoc:e.DeparturePortUNCode,departureName:e.DeparturePortName,arrivalLoc:e.ArrivalPortUNCode,arrivalName:e.ArrivalPortName,etd:this.$util.extractFormatedDate(e.EstimatedDepartureTime),eta:this.$util.extractFormatedDate(e.EstimatedArrivalTime)}))),cutoffDates:[{cutoffType:"port1stRecDate",cutoffName:"Port 1st receiving Date",cutoffDate:this.$util.extractFormatedDate(r.PortFirstReceivingDate)},{cutoffType:"dcCutOffDate",cutoffName:"D.C CutOff",cutoffDate:this.$util.extractFormatedDate(r.DangerousCargoCutOffDate)},{cutoffType:"reeferRecDate",cutoffName:"Reefer Receiving Date",cutoffDate:this.$util.extractFormatedDate(r.ReeferOpeningDate)},{cutoffType:"containerCutOffDate",cutoffName:"Container CutOff",cutoffDate:this.$util.extractFormatedDate(r.ContainerYardCutOffDate)},{cutoffType:"siCutOffDate",cutoffName:"S.I CutOff",cutoffDate:this.$util.extractFormatedDate(r.ShippingInstructionsCutOffDate)},{cutoffType:"specialCutOffDate",cutoffName:"Special CutOff",cutoffDate:this.$util.extractFormatedDate(r.SpecialCutOff)},{cutoffType:"reeferCutOffDate",cutoffName:"Reefer CutOff",cutoffDate:this.$util.extractFormatedDate(r.ReeferCutOffDate)},{cutoffType:"verifiedGroosMassCutOffDate",cutoffName:"VerifiedGrossMass CutOff:",cutoffDate:this.$util.extractFormatedDate(r.VerifiedGrossMassCutOffDate)}]};return s.cutoffDates.sort((function(e,t){return new Date(e.cutoffDate)-new Date(t.cutoffDate)})),{Summary:n,RateCard:c,Schedule:s}},makeRouteItemCmacgm(e){const t=this.items.find((e=>"cmacgm"===e.carrier)).data.quoteLineAndRoutingHeaders.find((t=>t.OfferId===e.OfferId)),a=t.ChargeDetails[0],r=t.BlChargeDetail,i=t.RoutingDetails,o=i.find((e=>1===e.LegNumber)),n={origin:{uncode:t.PortOfLoading,name:t.PolName},destination:{uncode:t.PortOfDischarge,name:t.PodName},cargoWgt:this.condition.container.wgt,cargoWgtUnit:this.condition.container.wgtType,cargoSzieType:t.Equipments[0].Code,cargoQty:this.condition.container.qty,serviceName:t.ScheduleDescription,vessleName:t.VesselName,transhipMode:0===t.TranShipment.length?"Direct":"Layover",totalTransitDays:t.TransitTime,allInPrice:Math.round(a.TotalCharge.Amount*this.condition.container.qty+r.TotalCharge.Amount),currency:a.TotalCharge.Currency.Code,priceDetail:[{priceType:"unitTotal",priceCaption:"per Unit",amount:Math.round(a.TotalCharge.Amount)},{priceType:"subTotal",priceCaption:"per BL",amount:Math.round(r.TotalCharge.Amount)}],priceStatus:!1===t.AllocationResponse.HasAllocation?"Sold out":"Available",rateValidity:"",etd:this.$util.extractFormatedDate(t.DepartureDate,"ymd"),eta:this.$util.extractFormatedDate(t.ArrivalDate,"ymd")},c=[{category:"OceanFreight"},{category:"FreightCharges"},{category:"PrepaidCharges"},{category:"CollectCharges"}],s=c.map((e=>{let t=[],i=[];"object"===typeof a[e.category]&&(a[e.category].Amount>0&&t.push({amount:a[e.category].Amount||0,currency:a[e.category].Currency.Code,perType:"per Equipment"}),a[e.category].Price&&a[e.category].Price.Amount>0&&t.push({amount:a[e.category].Price.Amount,currency:a[e.category].Price.Currency.Code,perType:"per Equipment"})),null!==r[e.category]&&r[e.category].Amount>0&&t.push({amount:r[e.category].Amount,currency:r[e.category].Currency.Code,perType:"per BL"}),"OceanFreight"===e.category&&i.push({chargeCode:"OFT",chargeName:"Ocean Freight",perType:"per Equipment",amount:t[0].amount,currency:t[0].currency,comments:""});var o="";switch(e.category){case"OceanFreight":o="OceanFreightChargeDetails";break;case"CollectCharges":o="CollectChargeDetails";break;case"FreightCharges":o="FreightChargeDetails";break;case"PrepaidCharges":o="PrepaidChargeDetails";break;default:o=`${e.category}Details`}return Array.isArray(a[o])&&a[o].length>0&&a[o].forEach((t=>{t.ChargeCode&&("OceanFreight"===e.category&&i.forEach((e=>{"OFT"===e.chargeCode&&(e.amount-=t.Price.Amount||t.Amount)})),i.push({chargeCode:t.ChargeCode,chargeName:t.ChargeName,perType:"per Equipment",amount:t.Price.Amount||t.Amount,currency:t.Price.Currency.Code||t.Currency.Code,comments:t.CommentOnChargeRule}))})),Array.isArray(r[o])&&r[o].length>0&&r[o].forEach((e=>{e.ChargeCode&&i.push({chargeCode:e.ChargeCode,chargeName:e.ChargeName,perType:"per BL",amount:e.Price.Amount||e.Amount,currency:e.Price.Currency.Code||e.Currency.Code,comments:e.CommentOnChargeRule})})),{category:e.category,summary:t,charges:i}})),u={transitDays:t.TransitTime,numberOfTransits:t.TranShipment.length,routings:t.RoutingDetails.map((e=>({vesselName:e.VesselName,serviceName:e.ServiceName,voyageNo:e.VoyageRef,leqSeq:e.LegNumber,departureLoc:e.DepartureDetails.PlaceCode,departureName:e.DepartureDetails.PlaceName,arrivalLoc:e.ArrivalDetails.PlaceCode,arrivalName:e.ArrivalDetails.PlaceName,etd:this.$util.extractFormatedDate(e.DepartureDate,"ymd"),eta:this.$util.extractFormatedDate(e.ArrivalDate,"ymd")}))),cutoffDates:[{cutoffType:"bookingCutOffDate",cutoffName:"Booking CutOff",cutoffDate:this.$util.extractFormatedDate(t.BookingCutoffDate)},{cutoffType:"portCutoffDate",cutoffName:"Port CutOff",cutoffDate:this.$util.extractFormatedDate(t.PortCutoffDate)},{cutoffType:"vgmCutoffDate",cutoffName:"VGM CutOff",cutoffDate:this.$util.extractFormatedDate(t.VgmCutoffDate)},{cutoffType:"specialBookingAcceptanceDate",cutoffName:"Special Booking Acceptance Date",cutoffDate:this.$util.extractFormatedDate(o.SpecialBookingAcceptance)},{cutoffType:"standardBookingAcceptanceDate",cutoffName:"Standard Booking Acceptance Date",cutoffDate:this.$util.extractFormatedDate(o.StandardBookingAcceptance)}]};return u.cutoffDates.sort((function(e,t){return new Date(e.cutoffDate)-new Date(t.cutoffDate)})),{Summary:n,RateCard:s,Schedule:u}},makeRouteItemOne(e){let t=this.items.find((e=>"one"===e.carrier)).data,a=t.find((t=>t.freightInfos.some((t=>t.spotRateOfferingId===e.OfferId))));const r=a.freightInfos[0],i=r.departures.find((e=>1===e.sequence));let o=[{category:"Basic Ocean Freight",charges:r.basicOceanFreightCharges}];r.freightCharges&&o.push({category:"Freight Charge",charges:r.freightCharges}),r.originCharges&&o.push({category:"Origin Charge",charges:r.originCharges}),r.destinationCharges&&o.push({category:"Destination Charge",charges:r.destinationCharges}),o.forEach((e=>{const t=[];e.charges.forEach((e=>{e.perType=e.chargeType,e.amount=e.totalAmount,e.amountUSD=e.totalAmountInUSD,e.currency=e.chargeCurrency,e.comments=String("Surcharge condition: ").concat(e.surchargeCondition);let a=t.find((t=>t.perType===e.perType&&t.currency===e.currency));a?a.amount+=e.amount:(a={perType:e.perType,amount:e.amount,currency:e.currency},t.push(a))})),e.summary=t}));let n={origin:{uncode:i.departureLoc,name:i.departureTerminal},destination:{uncode:r.arrival.arrivalLoc,name:r.arrival.arrivalTerminal},cargoSzieType:this.condition.container.size,cargoQty:this.condition.container.qty,serviceName:String().concat(r.serviceName," (",r.serviceCode,")"),vessleName:String().concat(r.transportName," (",r.conveyanceNumber,")"),transhipMode:r.routeType,totalTransitDays:a.freightInfos[0].duration,allInPrice:a.totalPrice+a.totalPricePremium-a.totalPricePromotion-a.totalPriceHotDeal,currency:a.currencies[0],rateValidity:r.validToDateTime,etd:a.departureDateEstimated,eta:a.arrivalDateEstimated,priceDetail:[{priceType:"total",priceCaption:"Base Total",amount:a.totalPrice},{priceType:"premium",priceCaption:"Premium",amount:a.totalPricePremium},{priceType:"promotion",priceCaption:"Promotion",amount:a.totalPricePromotion},{priceType:"hotdeal",priceCaption:"Hot Deal",amount:a.totalPriceHotDeal}],priceStatus:r.status},c={transitDays:a.freightInfos[0].duration,numberOfTransits:r.numberOfTransits,routings:r.departures.map((e=>({vesselName:e.transportName,serviceName:e.serviceCode,voyageNo:e.conveyanceNumber,leqSeq:e.sequence,departureLoc:e.departureLoc,departureName:e.departureTerminal,arrivalLoc:e.arrivalLoc,arrivalName:e.arrivalTerminal,etd:e.departureDateEstimated,eta:e.arrivalDateEstimated}))),cutoffDates:[{cutoffType:"docCutoff",cutoffName:"Doc cut off",cutoffDate:r.docCutoff},{cutoffType:"cyCutoff",cutoffName:"CY cut off",cutoffDate:r.cyCutoff},{cutoffType:"vgmCutoff",cutoffName:"VGM cut off",cutoffDate:r.vgmCutoff},{cutoffType:"portCutoff",cutoffName:"Port cut off",cutoffDate:r.portCutoff}]};return c.cutoffDates.sort((function(e,t){return new Date(e.cutoffDate)-new Date(t.cutoffDate)})),{Summary:n,RateCard:o,Schedule:c}}},json:'{"data": {"item": {       "EntityId": "process.env.VUE_APP_ENTITY_ID",       "name": \'\',       "email": \'\',       "content": \'\',       "vaild": true}     }   }'};t.Z=i}}]);